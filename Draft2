package com.example.zomebie.myapplication01;
import android.app.Activity;
import android.graphics.Color;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;
import com.google.android.youtube.player.YouTubeBaseActivity;
import com.google.android.youtube.player.YouTubeInitializationResult;
import com.google.android.youtube.player.YouTubePlayer;
import com.google.android.youtube.player.YouTubePlayer.ErrorReason;
import com.google.android.youtube.player.YouTubePlayer.PlayerStateChangeListener;
import com.google.android.youtube.player.YouTubePlayer.Provider;
import com.google.android.youtube.player.YouTubePlayerView;
import com.google.android.youtube.player.YouTubePlayer.PlaybackEventListener;
import java.util.HashMap;
class ButtonClas {

    private Activity myActivity = null;
    private Button phraseButton = null;
    private Button songButton = null;
    private TextView tv = null;
    ButtonClas(final Activity myActivity) {

        this.myActivity = myActivity;
        phraseButton = (Button) myActivity.findViewById(R.id.button2);
        songButton = (Button) myActivity.findViewById(R.id.button3);
        tv = (TextView) myActivity.findViewById(R.id.textView);  // 가사를 띄울 TextView 생성
        phraseButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                // 영상과 가사 멈추기
                // textView 에서 해당 가사 받아서 넘겨주기( 단어장 페이지 완성되면 )
                Toast.makeText(myActivity, "문장이 추가되었습니다.", Toast.LENGTH_LONG).show();// 넘겨줬으면 확인 메세지 띄워주고
                // 영상, 타이머, 가사 다시 시작
            }
        });
        songButton.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {

                Toast.makeText(myActivity, "영상이 즐겨찾기에 추가되었습니다.", Toast.LENGTH_LONG).show();
                songButton.setBackgroundColor(Color.argb(0xff, 132, 132, 130)); // 버튼의 색깔 회색으로 바뀌고
                songButton.setClickable(false);  //더 이상누를수없게
            }
        });
    } // constructor
}

class SubTitle {

    private Activity ac;
    private Spinner sp;
    private String[] str;
    private ArrayAdapter<String> adapter;
    private HashMap<Integer, String> hm=null;
    SubTitle(final Activity ac) {

        this.ac = ac;
        sp = (Spinner) ac.findViewById(R.id.spinner);
        str = new String[]{"영어", "한국어", "영어+한국어"};
        adapter = new ArrayAdapter<String>(ac, android.R.layout.simple_spinner_item, str);
        hm = new HashMap<>();
        hm.put(12,ac.getResources().getString(R.string.l1));
        hm.put(15,ac.getResources().getString(R.string.l2));
        sp.setAdapter(adapter);
        sp.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {

            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {

                switch (position) {     // 가사 맵의 키(가사가 뜨는 시간) 넘겨주기
                    case 0: // hm.get();
                        break; // 영어 가사
                    case 1:
                        break; // 한국어 가사
                    case 2:
                        break; // 영어와 한국어 같이
                    default:
                        break;
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }

        }); // setOnItemSelected 함수 끝
    } // constructor
}// SubTitle class
public class MainActivity extends YouTubeBaseActivity {

    private YouTube youTube = null;
    private ButtonClas bc = null;
    private SubTitle st = null;
    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        youTube = new YouTube(); // innerClass 생성
        bc = new ButtonClas(this);
        st = new SubTitle(this);
    } // OnCreate 함수 끝
    // innerClass YouTube
    class YouTube implements YouTubePlayer.Provider {

        public static final String API_KEY = "AIzaSyCsaiAc4liJ9if0n1N_xAMUygpav0OB3YM ";
        public static final String VIDEO_ID = "iUG8bDv76t4";
        public YouTubePlayerView youTubePlayerView = null;
        public YouTubePlayer myYouTubePlayer = null;
        public YouTube() {

            youTubePlayerView = (YouTubePlayerView) findViewById(R.id.youtube_player); // 영상 띄울 곳
            youTubePlayerView.initialize(API_KEY, new YouTubePlayer.OnInitializedListener() {
                @Override
                public void onInitializationSuccess(Provider provider, YouTubePlayer youTubePlayer, boolean b) {

                    youTubePlayer.setPlayerStateChangeListener(playerStateChangeListener);
                    youTubePlayer.setPlaybackEventListener(playbackEventListener);
                    if (!b) {

                        youTubePlayer.cueVideo(VIDEO_ID); // 우리가 넣고자 하는 영상
                    }

                    myYouTubePlayer = youTubePlayer; // YouTubePlayer interface 안에 우리가 쓰고자 하는 getCurrentTimeMills()가 있음, 메소드의
                    //매개변수로 인스턴스 생성
                }

                @Override
                public void onInitializationFailure(Provider provider, YouTubeInitializationResult youTubeInitializationResult) {
                    Log.d("mini1", youTubeInitializationResult.toString());
                }
            });
        } // youTubePlayerView.initialize
        private PlaybackEventListener playbackEventListener = new PlaybackEventListener() {
            @Override
            public void onPlaying() {


                // Toast.makeText(MainActivity.this, "PLAY", Toast.LENGTH_LONG).show();
            }

            @Override
            public void onPaused() {

                // Toast.makeText(MainActivity.this, "Paused", Toast.LENGTH_LONG).show();
                Log.d("mini1", "onPaused " + myYouTubePlayer.getCurrentTimeMillis() / 1100 + "초");
            }

            @Override
            public void onStopped() {

            }

            @Override
            public void onBuffering(boolean b) {

            }

            @Override
            public void onSeekTo(int i) {

            }


        }; // PlaybackEventListener interface
        private PlayerStateChangeListener playerStateChangeListener = new PlayerStateChangeListener() {
            @Override
            public void onLoading() {

            }

            @Override
            public void onLoaded(String s) {

            }

            @Override
            public void onAdStarted() {

            }

            @Override
            public void onVideoStarted() {

            }

            @Override
            public void onVideoEnded() {

            }

            @Override
            public void onError(ErrorReason errorReason) {

            }
        }; //PlayerStateChangeListener interface
        @Override
        public void initialize(String s, YouTubePlayer.OnInitializedListener onInitializedListener) {

        }

    } // YouTube innerclass
} // MainActivity class
