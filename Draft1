package com.example.zomebie.myapplication01;
import android.content.Intent;
import android.graphics.Color;
import android.os.Handler;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.Toast;
import android.util.Log;
import com.google.android.youtube.player.YouTubeBaseActivity;
import com.google.android.youtube.player.YouTubeInitializationResult;
import com.google.android.youtube.player.YouTubePlayer;
import com.google.android.youtube.player.YouTubePlayer.ErrorReason;
import com.google.android.youtube.player.YouTubePlayer.PlayerStateChangeListener;
import com.google.android.youtube.player.YouTubePlayer.Provider;
import com.google.android.youtube.player.YouTubePlayerView;
import com.google.android.youtube.player.YouTubePlayer.PlaybackEventListener;
import org.w3c.dom.Text;
import java.util.Timer;
import java.util.TimerTask;
class SubClass implements Runnable{

    private static final String TAG = "Mini1";
    Timer timer = new Timer();
    TimerTask  timerTask = new TimerTask() {  // timerTask 생성
        int c = 0;
        public void run() {

            Log.d(TAG, String.valueOf(c));
            c++;
        }
    }; // timerTask 생성자 끝
    @Override
    public void run() {
        // TimerTask  scheduling
        timer.schedule(timerTask, 0, 1000);
    }
    public void subPaused(){


        try{
            Log.v("Mini1","onPaused try catch"); // 여기까진 들어옴
                synchronized (this){

                    wait();
                }




        }catch (InterruptedException e){
            e.printStackTrace();
        }



    }
}


public class MainActivity extends YouTubeBaseActivity implements YouTubePlayer.OnInitializedListener {

    public static final String API_KEY = "AIzaSyCsaiAc4liJ9if0n1N_xAMUygpav0OB3YM ";
    public static final String VIDEO_ID = "iUG8bDv76t4";
    private SubClass sub=null;
    private TextView tv=null;
    //private Handler handler=null;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
       // handler=new Handler();
        sub=new SubClass();
        YouTubePlayerView youTubePlayerView = (YouTubePlayerView) findViewById(R.id.youtube_player);
        youTubePlayerView.initialize(API_KEY, this);
        tv = (TextView) findViewById(R.id.textView);  // 가사 띄울 TextView 생성
        // spinner 만들기
        Spinner spinner = (Spinner) findViewById(R.id.spinner);
        String[] str = new String[]{"영어", "한국어", "영어+한국어"};
        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, str);
        spinner.setAdapter(adapter);
        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {

            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                switch (position) {     // 가사 맵의 키 넘겨주기
                    case 0:
                        English();
                        break;
                    case 1:
                        break;
                    case 2:
                        break;
                    default:
                        break;
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }
        }); // setOnItemSelected 함수 끝
    } // OnCreate 함수 끝
    public void English() {


    }

    public void onInitializationSuccess(Provider provider, YouTubePlayer youTubePlayer, boolean b) {

        youTubePlayer.setPlayerStateChangeListener(playerStateChangeListener);
        youTubePlayer.setPlaybackEventListener(playbackEventListener);
        if (!b) {
            youTubePlayer.cueVideo(VIDEO_ID);
        }
    }

    @Override
    public void onInitializationFailure(Provider provider, YouTubeInitializationResult youTubeInitializationResult) {

    }

    private PlaybackEventListener playbackEventListener = new PlaybackEventListener() {
        @Override
        public void onPlaying() {



            Toast.makeText(MainActivity.this, "PLAY", Toast.LENGTH_LONG).show();
            Thread subThread=new Thread(sub);
            subThread.start();
        }

        @Override
        public void onPaused() {

            Toast.makeText(MainActivity.this, "Paused", Toast.LENGTH_LONG).show();
           sub.subPaused();
        }

        @Override
        public void onStopped() {

        }

        @Override
        public void onBuffering(boolean b) {

        }

        @Override
        public void onSeekTo(int i) {

        }


    };
    private PlayerStateChangeListener playerStateChangeListener = new PlayerStateChangeListener() {
        @Override
        public void onLoading() {

        }

        @Override
        public void onLoaded(String s) {

        }

        @Override
        public void onAdStarted() {

        }

        @Override
        public void onVideoStarted() {

        }

        @Override
        public void onVideoEnded() {

        }

        @Override
        public void onError(ErrorReason errorReason) {

        }
    };
    // 여기까지가 YouTube 오버라이딩 코드
    public void phrase(View view) {

        // 영상과 가사 멈추기
        // 텍스트뷰에서 해당 가사 받기
        // 해당 가사 넘겨주기( 단어장 페이지 완성되면 )
       /* Intent intent=new Intent();
        intent.putExtra("phrase",tv.getText().toString());*/
        Toast.makeText(this, "문장이 추가되었습니다.", Toast.LENGTH_LONG).show();// 넘겨줬으면 확인 메세지 띄워주고
        // 영상, 타이머, 가사 다시 시작
    }

    public void song(View view) {


        Button songButton = (Button) findViewById(R.id.button3);
        //영상 제목을 받고
        Toast.makeText(this, "영상이 즐겨찾기에 추가되었습니다.", Toast.LENGTH_LONG).show();// "즐겨찾기에 추가되었습니다" text 보여주고
        // 즐겨찾기 페이지에 제목 보내고
        songButton.setBackgroundColor(Color.argb(0xff, 132, 132, 130)); // 버튼의 색깔 회색으로 바뀌고
        songButton.setClickable(false);  //더이상누를수없게
    }

    //
   /* protected void onDestroy() {
        //타이머 끝내기
        timer.cancel();
        super.onDestroy();
    }
*/
};
